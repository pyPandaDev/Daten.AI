import React from 'react'
import { Sparkles } from 'lucide-react'
import { TaskSuggestion } from '../../services/api'

interface AiRecommendationsPanelProps {
  suggestions: TaskSuggestion[]
  selectedPath?: 'analysis' | 'datascience'
  onSelectTask: (task: TaskSuggestion) => void
  onEditTasks: () => void
}

const AiRecommendationsPanel: React.FC<AiRecommendationsPanelProps> = ({
  suggestions,
  selectedPath,
  onSelectTask,
  onEditTasks,
}) => {
  if (suggestions.length === 0) return null

  return (
    <>
      {/* Header */}
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center space-x-3">
          <div className="h-12 w-12 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-xl flex items-center justify-center shadow-lg">
            <Sparkles className="h-7 w-7 text-white" />
          </div>
          <div>
            <h2 className="text-2xl font-bold text-white flex items-center space-x-2">
              <span>✨ AI Recommended Tasks</span>
              {selectedPath && (
                <span
                  className={`px-3 py-1.5 rounded-full text-xs font-bold ${
                    selectedPath === 'analysis'
                      ? 'bg-blue-900/50 text-blue-300 border-2 border-blue-700'
                      : 'bg-purple-900/50 text-purple-300 border-2 border-purple-700'
                  }`}
                >
                  {selectedPath === 'analysis' ? '📊 Data Analysis' : '🧠 Data Science'}
                </span>
              )}
            </h2>
            <p className="text-sm text-gray-400">All possible tasks for your dataset - Generated by AI</p>
          </div>
        </div>
        <button
          onClick={onEditTasks}
          className="px-4 py-2 bg-neutral-800 hover:bg-neutral-700 text-white rounded-lg font-medium flex items-center space-x-2 transition-all"
        >
          <span>✏️</span>
          <span>Edit</span>
        </button>
      </div>

      {/* Info Banner */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 border-2 border-blue-800/50 rounded-xl p-4 mb-6">
        <p className="text-sm text-gray-300 flex items-start space-x-2">
          <span className="text-lg">💡</span>
          <span>
            <strong>AI analyzed your dataset</strong> and identified <strong>{suggestions.length} possible tasks</strong> you can
            perform. Select any task below and click the Run button to execute it.
          </span>
        </p>
      </div>

      {/* Top Priority Task */}
      <div className="bg-gradient-to-br from-yellow-900/40 via-orange-900/40 to-amber-900/40 border-2 border-orange-700/50 rounded-2xl p-6 shadow-xl shadow-orange-500/20 mb-6">
        <div className="flex items-start space-x-4 mb-4">
          <div className="h-14 w-14 bg-gradient-to-br from-orange-400 to-amber-500 rounded-xl flex items-center justify-center flex-shrink-0 shadow-lg">
            <span className="text-3xl">
              {suggestions[0].category === 'visualization'
                ? '📊'
                : suggestions[0].category === 'eda'
                ? '🔍'
                : suggestions[0].category === 'modeling'
                ? '🤖'
                : '📈'}
            </span>
          </div>
          <div className="flex-1">
            <div className="flex items-center space-x-2 mb-2">
              <span className="px-3 py-1 bg-orange-500 text-white text-xs font-bold rounded-full">#1 TOP PRIORITY</span>
              <span
                className={`px-2 py-1 rounded text-xs font-semibold ${
                  suggestions[0].priority === 'high'
                    ? 'bg-red-900/50 text-red-300'
                    : suggestions[0].priority === 'medium'
                    ? 'bg-yellow-900/50 text-yellow-300'
                    : 'bg-green-900/50 text-green-300'
                }`}
              >
                {suggestions[0].priority.toUpperCase()}
              </span>
            </div>
            <h3 className="text-xl font-bold text-white mb-2">{suggestions[0].title}</h3>
            <p className="text-gray-300 leading-relaxed mb-3">{suggestions[0].description}</p>
            <div className="flex items-center space-x-4 text-sm text-gray-400">
              <span className="flex items-center space-x-1">
                <span>⏱️</span>
                <span>{suggestions[0].estimated_time}</span>
              </span>
              <span className="flex items-center space-x-1">
                <span>📁</span>
                <span className="capitalize">{suggestions[0].category}</span>
              </span>
            </div>
          </div>
        </div>

        <button
          onClick={() => onSelectTask(suggestions[0])}
          className="w-full group px-6 py-4 bg-gradient-to-r from-orange-500 via-amber-500 to-yellow-500 text-white rounded-xl font-bold text-lg hover:from-orange-600 hover:via-amber-600 hover:to-yellow-600 transition-all shadow-2xl hover:shadow-3xl transform hover:scale-[1.02] flex items-center justify-center space-x-3"
        >
          <Sparkles className="h-6 w-6 group-hover:animate-spin" />
          <span>🚀 Run This Task Now</span>
        </button>
      </div>

      {/* All Other Tasks */}
      {suggestions.length > 1 && (
        <div className="space-y-4">
          <h3 className="text-lg font-bold text-white flex items-center space-x-2">
            <span>📋 All Available Tasks ({suggestions.length - 1} more)</span>
          </h3>

          <div className="grid gap-4">
            {suggestions.slice(1).map((task, index) => (
              <div
                key={task.id}
                className="bg-neutral-900/50 border-2 border-neutral-800 hover:border-blue-500 rounded-xl p-5 transition-all hover:shadow-lg hover:shadow-blue-500/20 group"
              >
                <div className="flex items-start space-x-4">
                  <div className="h-12 w-12 bg-gradient-to-br from-blue-900/50 to-purple-900/50 rounded-lg flex items-center justify-center flex-shrink-0">
                    <span className="text-2xl">
                      {task.category === 'visualization'
                        ? '📊'
                        : task.category === 'eda'
                        ? '🔍'
                        : task.category === 'modeling'
                        ? '🤖'
                        : task.category === 'cleaning'
                        ? '🧹'
                        : task.category === 'feature_engineering'
                        ? '🔧'
                        : '📈'}
                    </span>
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center space-x-2 mb-2">
                      <span className="text-sm font-bold text-gray-400">#{index + 2}</span>
                      <span
                        className={`px-2 py-0.5 rounded text-xs font-semibold ${
                          task.priority === 'high'
                            ? 'bg-red-900/50 text-red-300'
                            : task.priority === 'medium'
                            ? 'bg-yellow-900/50 text-yellow-300'
                            : 'bg-green-900/50 text-green-300'
                        }`}
                      >
                        {task.priority.toUpperCase()}
                      </span>
                      <span className="text-xs text-gray-400 capitalize">• {task.category}</span>
                    </div>
                    <h4 className="text-lg font-bold text-white mb-1 group-hover:text-blue-400 transition-colors">{task.title}</h4>
                    <p className="text-sm text-gray-300 mb-3 line-clamp-2">{task.description}</p>
                    <div className="flex items-center justify-between">
                      <span className="text-xs text-gray-400 flex items-center space-x-1">
                        <span>⏱️</span>
                        <span>{task.estimated_time}</span>
                      </span>
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          onSelectTask(task)
                        }}
                        className="px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-lg font-semibold text-sm hover:from-blue-600 hover:to-purple-600 transition-all shadow-md hover:shadow-lg"
                      >
                        Run Task →
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </>
  )
}

export default AiRecommendationsPanel
